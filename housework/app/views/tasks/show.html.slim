= link_to t('.back', :default => t("helpers.links.back")), tasks_path, :class => 'btn btn-default'
'
- if current_user.eql?(@task.user) || current_user.has_role?(:parent)
  = link_to t('.edit', :default => t("helpers.links.edit")), edit_task_path(@task), :class => 'btn btn-default'

- model_class = Task
.page-header
  h1=t '.title', :default => model_class.model_name.human.titleize

p
  strong= t(:title) + ':'
  br
  = @task.title
p
  strong= t(:description) + ':'
  br
  = @task.description

p
  strong= t(:who_perform) + ':'
  br
  = @names[@task.user_perform_id]

p
  strong= t(:status) + ':'
  br
  = @task.status

- if @task.sleeping? && current_user.id.eql?(@task.user_perform_id)
  .col-sm-6
    = simple_form_for @estimation, url: estimation_added_task_path, method: :put  do |f|
      = f.input :end_time, as: :datetime_picker,input_html: {data: {date_options: { defaultDate: Date.today.strftime("%Y/%m/%d") }}}
      = f.button :submit, t(:create_estimation)

= render 'task_waiting'

- if @task.running?
#getting-started
javascript:
  $("#getting-started")
  .countdown("#{@task.estimation.end_time}", function(event) {
    $(this).text(
      event.strftime('%D days %H:%M:%S')
    );
  });

- if @task.running? && current_user.id == @task.user_perform_id
  p
    = link_to 'Finished', finished_task_path(@task), method: :put, class: 'btn btn-primary'
    '
    = link_to 'Suspend', suspend_task_path(@task), method: :put, class: 'btn btn-warning'

= render 'task_suspending'

= render 'mark'

#tag_cloud
  - tag_cloud Task.tag_counts, %w[s m l] do |tag, css_class|
    = link_to tag.name, tag_path(tag.name), class: css_class